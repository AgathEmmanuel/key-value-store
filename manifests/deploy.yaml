apiVersion: apps/v1
kind: Deployment
metadata:
  name: kvstore-deploy
spec:
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 30%
      maxUnavailable: 30%
    type: RollingUpdate
  selector:
    matchLabels:
      app: kvstore-app
  template:
    metadata:
      labels:
        app: kvstore-app
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - kvstore-app
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: kvstore
          image: agathemmanuel/kvstore-service:v1
          imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "10Mi"
            cpu: "100m"
          limits:
            memory: "20Mi"
            cpu: "200m"
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "echo postStart Message"]
          preStop:
            exec:
              command: ["/bin/sh","-c","python -s quit; while killall -0 python; do sleep 5; done"]
        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
        livenessProbe:
          exec:
            command:
              - bash
              - "-c"
              - kill -0 $(cat /var/run/python.pid)
          initialDelaySeconds: 5
          periodSeconds: 10
      terminationGracePeriodSeconds: 45
---
apiVersion: v1
kind: Service
metadata:
  name: kvstore-service
spec:
  selector:
    app: kvstore-app
  ports:
    - name: kvstore-port
      protocol: TCP
      port: 8080
      targetPort: 8000
